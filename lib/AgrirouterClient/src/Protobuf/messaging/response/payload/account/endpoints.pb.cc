// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging/response/payload/account/endpoints.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messaging/response/payload/account/endpoints.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace agrirouter {
namespace response {
namespace payload {
namespace account {

namespace {

const ::google::protobuf::Descriptor* ListEndpointsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListEndpointsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListEndpointsResponse_MessageType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListEndpointsResponse_MessageType_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListEndpointsResponse_Endpoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListEndpointsResponse_Endpoint_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ListEndpointsResponse_Direction_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto() {
  protobuf_AddDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messaging/response/payload/account/endpoints.proto");
  GOOGLE_CHECK(file != NULL);
  ListEndpointsResponse_descriptor_ = file->message_type(0);
  static const int ListEndpointsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse, endpoints_),
  };
  ListEndpointsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListEndpointsResponse_descriptor_,
      ListEndpointsResponse::internal_default_instance(),
      ListEndpointsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListEndpointsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse, _internal_metadata_));
  ListEndpointsResponse_MessageType_descriptor_ = ListEndpointsResponse_descriptor_->nested_type(0);
  static const int ListEndpointsResponse_MessageType_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_MessageType, technical_message_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_MessageType, direction_),
  };
  ListEndpointsResponse_MessageType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListEndpointsResponse_MessageType_descriptor_,
      ListEndpointsResponse_MessageType::internal_default_instance(),
      ListEndpointsResponse_MessageType_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListEndpointsResponse_MessageType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_MessageType, _internal_metadata_));
  ListEndpointsResponse_Endpoint_descriptor_ = ListEndpointsResponse_descriptor_->nested_type(1);
  static const int ListEndpointsResponse_Endpoint_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_Endpoint, endpoint_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_Endpoint, endpoint_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_Endpoint, endpoint_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_Endpoint, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_Endpoint, messagetypes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_Endpoint, external_id_),
  };
  ListEndpointsResponse_Endpoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListEndpointsResponse_Endpoint_descriptor_,
      ListEndpointsResponse_Endpoint::internal_default_instance(),
      ListEndpointsResponse_Endpoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListEndpointsResponse_Endpoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListEndpointsResponse_Endpoint, _internal_metadata_));
  ListEndpointsResponse_Direction_descriptor_ = ListEndpointsResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListEndpointsResponse_descriptor_, ListEndpointsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListEndpointsResponse_MessageType_descriptor_, ListEndpointsResponse_MessageType::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListEndpointsResponse_Endpoint_descriptor_, ListEndpointsResponse_Endpoint::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto() {
  ListEndpointsResponse_default_instance_.Shutdown();
  delete ListEndpointsResponse_reflection_;
  ListEndpointsResponse_MessageType_default_instance_.Shutdown();
  delete ListEndpointsResponse_MessageType_reflection_;
  ListEndpointsResponse_Endpoint_default_instance_.Shutdown();
  delete ListEndpointsResponse_Endpoint_reflection_;
}

void protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ListEndpointsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListEndpointsResponse_MessageType_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListEndpointsResponse_Endpoint_default_instance_.DefaultConstruct();
  ListEndpointsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListEndpointsResponse_MessageType_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListEndpointsResponse_Endpoint_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_once_);
void protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_once_,
                 &protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_impl);
}
void protobuf_AddDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n2messaging/response/payload/account/end"
    "points.proto\022#agrirouter.response.payloa"
    "d.account\"\201\004\n\025ListEndpointsResponse\022V\n\te"
    "ndpoints\030\001 \003(\0132C.agrirouter.response.pay"
    "load.account.ListEndpointsResponse.Endpo"
    "int\032\206\001\n\013MessageType\022\036\n\026technical_message"
    "_type\030\001 \001(\t\022W\n\tdirection\030\002 \001(\0162D.agrirou"
    "ter.response.payload.account.ListEndpoin"
    "tsResponse.Direction\032\320\001\n\010Endpoint\022\023\n\013end"
    "point_id\030\001 \001(\t\022\025\n\rendpoint_name\030\002 \001(\t\022\025\n"
    "\rendpoint_type\030\003 \001(\t\022\016\n\006status\030\004 \001(\t\022\\\n\014"
    "messageTypes\030\005 \003(\0132F.agrirouter.response"
    ".payload.account.ListEndpointsResponse.M"
    "essageType\022\023\n\013external_id\030\006 \001(\t\"4\n\tDirec"
    "tion\022\010\n\004SEND\020\000\022\013\n\007RECEIVE\020\001\022\020\n\014SEND_RECE"
    "IVE\020\002b\006proto3", 613);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messaging/response/payload/account/endpoints.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_once_);
void protobuf_AddDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_once_,
                 &protobuf_AddDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto {
  StaticDescriptorInitializer_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto() {
    protobuf_AddDesc_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  }
} static_descriptor_initializer_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* ListEndpointsResponse_Direction_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListEndpointsResponse_Direction_descriptor_;
}
bool ListEndpointsResponse_Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ListEndpointsResponse_Direction ListEndpointsResponse::SEND;
const ListEndpointsResponse_Direction ListEndpointsResponse::RECEIVE;
const ListEndpointsResponse_Direction ListEndpointsResponse::SEND_RECEIVE;
const ListEndpointsResponse_Direction ListEndpointsResponse::Direction_MIN;
const ListEndpointsResponse_Direction ListEndpointsResponse::Direction_MAX;
const int ListEndpointsResponse::Direction_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListEndpointsResponse_MessageType::kTechnicalMessageTypeFieldNumber;
const int ListEndpointsResponse_MessageType::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListEndpointsResponse_MessageType::ListEndpointsResponse_MessageType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
}

void ListEndpointsResponse_MessageType::InitAsDefaultInstance() {
}

ListEndpointsResponse_MessageType::ListEndpointsResponse_MessageType(const ListEndpointsResponse_MessageType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
}

void ListEndpointsResponse_MessageType::SharedCtor() {
  technical_message_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_ = 0;
  _cached_size_ = 0;
}

ListEndpointsResponse_MessageType::~ListEndpointsResponse_MessageType() {
  // @@protoc_insertion_point(destructor:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  SharedDtor();
}

void ListEndpointsResponse_MessageType::SharedDtor() {
  technical_message_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListEndpointsResponse_MessageType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListEndpointsResponse_MessageType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListEndpointsResponse_MessageType_descriptor_;
}

const ListEndpointsResponse_MessageType& ListEndpointsResponse_MessageType::default_instance() {
  protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListEndpointsResponse_MessageType> ListEndpointsResponse_MessageType_default_instance_;

ListEndpointsResponse_MessageType* ListEndpointsResponse_MessageType::New(::google::protobuf::Arena* arena) const {
  ListEndpointsResponse_MessageType* n = new ListEndpointsResponse_MessageType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListEndpointsResponse_MessageType::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  technical_message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direction_ = 0;
}

bool ListEndpointsResponse_MessageType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string technical_message_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_technical_message_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->technical_message_type().data(), this->technical_message_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_direction;
        break;
      }

      // optional .agrirouter.response.payload.account.ListEndpointsResponse.Direction direction = 2;
      case 2: {
        if (tag == 16) {
         parse_direction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_direction(static_cast< ::agrirouter::response::payload::account::ListEndpointsResponse_Direction >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  return false;
#undef DO_
}

void ListEndpointsResponse_MessageType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  // optional string technical_message_type = 1;
  if (this->technical_message_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->technical_message_type().data(), this->technical_message_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->technical_message_type(), output);
  }

  // optional .agrirouter.response.payload.account.ListEndpointsResponse.Direction direction = 2;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->direction(), output);
  }

  // @@protoc_insertion_point(serialize_end:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
}

::google::protobuf::uint8* ListEndpointsResponse_MessageType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  // optional string technical_message_type = 1;
  if (this->technical_message_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->technical_message_type().data(), this->technical_message_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->technical_message_type(), target);
  }

  // optional .agrirouter.response.payload.account.ListEndpointsResponse.Direction direction = 2;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->direction(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  return target;
}

size_t ListEndpointsResponse_MessageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  size_t total_size = 0;

  // optional string technical_message_type = 1;
  if (this->technical_message_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->technical_message_type());
  }

  // optional .agrirouter.response.payload.account.ListEndpointsResponse.Direction direction = 2;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListEndpointsResponse_MessageType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListEndpointsResponse_MessageType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListEndpointsResponse_MessageType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
    UnsafeMergeFrom(*source);
  }
}

void ListEndpointsResponse_MessageType::MergeFrom(const ListEndpointsResponse_MessageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListEndpointsResponse_MessageType::UnsafeMergeFrom(const ListEndpointsResponse_MessageType& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.technical_message_type().size() > 0) {

    technical_message_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.technical_message_type_);
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
}

void ListEndpointsResponse_MessageType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListEndpointsResponse_MessageType::CopyFrom(const ListEndpointsResponse_MessageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.response.payload.account.ListEndpointsResponse.MessageType)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListEndpointsResponse_MessageType::IsInitialized() const {

  return true;
}

void ListEndpointsResponse_MessageType::Swap(ListEndpointsResponse_MessageType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListEndpointsResponse_MessageType::InternalSwap(ListEndpointsResponse_MessageType* other) {
  technical_message_type_.Swap(&other->technical_message_type_);
  std::swap(direction_, other->direction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListEndpointsResponse_MessageType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListEndpointsResponse_MessageType_descriptor_;
  metadata.reflection = ListEndpointsResponse_MessageType_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListEndpointsResponse_Endpoint::kEndpointIdFieldNumber;
const int ListEndpointsResponse_Endpoint::kEndpointNameFieldNumber;
const int ListEndpointsResponse_Endpoint::kEndpointTypeFieldNumber;
const int ListEndpointsResponse_Endpoint::kStatusFieldNumber;
const int ListEndpointsResponse_Endpoint::kMessageTypesFieldNumber;
const int ListEndpointsResponse_Endpoint::kExternalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListEndpointsResponse_Endpoint::ListEndpointsResponse_Endpoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
}

void ListEndpointsResponse_Endpoint::InitAsDefaultInstance() {
}

ListEndpointsResponse_Endpoint::ListEndpointsResponse_Endpoint(const ListEndpointsResponse_Endpoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
}

void ListEndpointsResponse_Endpoint::SharedCtor() {
  endpoint_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListEndpointsResponse_Endpoint::~ListEndpointsResponse_Endpoint() {
  // @@protoc_insertion_point(destructor:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  SharedDtor();
}

void ListEndpointsResponse_Endpoint::SharedDtor() {
  endpoint_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListEndpointsResponse_Endpoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListEndpointsResponse_Endpoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListEndpointsResponse_Endpoint_descriptor_;
}

const ListEndpointsResponse_Endpoint& ListEndpointsResponse_Endpoint::default_instance() {
  protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListEndpointsResponse_Endpoint> ListEndpointsResponse_Endpoint_default_instance_;

ListEndpointsResponse_Endpoint* ListEndpointsResponse_Endpoint::New(::google::protobuf::Arena* arena) const {
  ListEndpointsResponse_Endpoint* n = new ListEndpointsResponse_Endpoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListEndpointsResponse_Endpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  endpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  external_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetypes_.Clear();
}

bool ListEndpointsResponse_Endpoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string endpoint_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint_id().data(), this->endpoint_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_endpoint_name;
        break;
      }

      // optional string endpoint_name = 2;
      case 2: {
        if (tag == 18) {
         parse_endpoint_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint_name().data(), this->endpoint_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_endpoint_type;
        break;
      }

      // optional string endpoint_type = 3;
      case 3: {
        if (tag == 26) {
         parse_endpoint_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endpoint_type().data(), this->endpoint_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_status;
        break;
      }

      // optional string status = 4;
      case 4: {
        if (tag == 34) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_messageTypes;
        break;
      }

      // repeated .agrirouter.response.payload.account.ListEndpointsResponse.MessageType messageTypes = 5;
      case 5: {
        if (tag == 42) {
         parse_messageTypes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_messageTypes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_messagetypes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_messageTypes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_external_id;
        break;
      }

      // optional string external_id = 6;
      case 6: {
        if (tag == 50) {
         parse_external_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_external_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->external_id().data(), this->external_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  return false;
#undef DO_
}

void ListEndpointsResponse_Endpoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  // optional string endpoint_id = 1;
  if (this->endpoint_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_id().data(), this->endpoint_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint_id(), output);
  }

  // optional string endpoint_name = 2;
  if (this->endpoint_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_name().data(), this->endpoint_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endpoint_name(), output);
  }

  // optional string endpoint_type = 3;
  if (this->endpoint_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_type().data(), this->endpoint_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->endpoint_type(), output);
  }

  // optional string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->status(), output);
  }

  // repeated .agrirouter.response.payload.account.ListEndpointsResponse.MessageType messageTypes = 5;
  for (unsigned int i = 0, n = this->messagetypes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->messagetypes(i), output);
  }

  // optional string external_id = 6;
  if (this->external_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_id().data(), this->external_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->external_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
}

::google::protobuf::uint8* ListEndpointsResponse_Endpoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  // optional string endpoint_id = 1;
  if (this->endpoint_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_id().data(), this->endpoint_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint_id(), target);
  }

  // optional string endpoint_name = 2;
  if (this->endpoint_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_name().data(), this->endpoint_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endpoint_name(), target);
  }

  // optional string endpoint_type = 3;
  if (this->endpoint_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endpoint_type().data(), this->endpoint_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->endpoint_type(), target);
  }

  // optional string status = 4;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  // repeated .agrirouter.response.payload.account.ListEndpointsResponse.MessageType messageTypes = 5;
  for (unsigned int i = 0, n = this->messagetypes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->messagetypes(i), false, target);
  }

  // optional string external_id = 6;
  if (this->external_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->external_id().data(), this->external_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->external_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  return target;
}

size_t ListEndpointsResponse_Endpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  size_t total_size = 0;

  // optional string endpoint_id = 1;
  if (this->endpoint_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint_id());
  }

  // optional string endpoint_name = 2;
  if (this->endpoint_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint_name());
  }

  // optional string endpoint_type = 3;
  if (this->endpoint_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endpoint_type());
  }

  // optional string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // optional string external_id = 6;
  if (this->external_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->external_id());
  }

  // repeated .agrirouter.response.payload.account.ListEndpointsResponse.MessageType messageTypes = 5;
  {
    unsigned int count = this->messagetypes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messagetypes(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListEndpointsResponse_Endpoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListEndpointsResponse_Endpoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListEndpointsResponse_Endpoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
    UnsafeMergeFrom(*source);
  }
}

void ListEndpointsResponse_Endpoint::MergeFrom(const ListEndpointsResponse_Endpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListEndpointsResponse_Endpoint::UnsafeMergeFrom(const ListEndpointsResponse_Endpoint& from) {
  GOOGLE_DCHECK(&from != this);
  messagetypes_.MergeFrom(from.messagetypes_);
  if (from.endpoint_id().size() > 0) {

    endpoint_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_id_);
  }
  if (from.endpoint_name().size() > 0) {

    endpoint_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_name_);
  }
  if (from.endpoint_type().size() > 0) {

    endpoint_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endpoint_type_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.external_id().size() > 0) {

    external_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.external_id_);
  }
}

void ListEndpointsResponse_Endpoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListEndpointsResponse_Endpoint::CopyFrom(const ListEndpointsResponse_Endpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListEndpointsResponse_Endpoint::IsInitialized() const {

  return true;
}

void ListEndpointsResponse_Endpoint::Swap(ListEndpointsResponse_Endpoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListEndpointsResponse_Endpoint::InternalSwap(ListEndpointsResponse_Endpoint* other) {
  endpoint_id_.Swap(&other->endpoint_id_);
  endpoint_name_.Swap(&other->endpoint_name_);
  endpoint_type_.Swap(&other->endpoint_type_);
  status_.Swap(&other->status_);
  messagetypes_.UnsafeArenaSwap(&other->messagetypes_);
  external_id_.Swap(&other->external_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListEndpointsResponse_Endpoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListEndpointsResponse_Endpoint_descriptor_;
  metadata.reflection = ListEndpointsResponse_Endpoint_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListEndpointsResponse::kEndpointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListEndpointsResponse::ListEndpointsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.response.payload.account.ListEndpointsResponse)
}

void ListEndpointsResponse::InitAsDefaultInstance() {
}

ListEndpointsResponse::ListEndpointsResponse(const ListEndpointsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:agrirouter.response.payload.account.ListEndpointsResponse)
}

void ListEndpointsResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListEndpointsResponse::~ListEndpointsResponse() {
  // @@protoc_insertion_point(destructor:agrirouter.response.payload.account.ListEndpointsResponse)
  SharedDtor();
}

void ListEndpointsResponse::SharedDtor() {
}

void ListEndpointsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListEndpointsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListEndpointsResponse_descriptor_;
}

const ListEndpointsResponse& ListEndpointsResponse::default_instance() {
  protobuf_InitDefaults_messaging_2fresponse_2fpayload_2faccount_2fendpoints_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListEndpointsResponse> ListEndpointsResponse_default_instance_;

ListEndpointsResponse* ListEndpointsResponse::New(::google::protobuf::Arena* arena) const {
  ListEndpointsResponse* n = new ListEndpointsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListEndpointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.response.payload.account.ListEndpointsResponse)
  endpoints_.Clear();
}

bool ListEndpointsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.response.payload.account.ListEndpointsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .agrirouter.response.payload.account.ListEndpointsResponse.Endpoint endpoints = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_endpoints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_endpoints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_endpoints;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.response.payload.account.ListEndpointsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.response.payload.account.ListEndpointsResponse)
  return false;
#undef DO_
}

void ListEndpointsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.response.payload.account.ListEndpointsResponse)
  // repeated .agrirouter.response.payload.account.ListEndpointsResponse.Endpoint endpoints = 1;
  for (unsigned int i = 0, n = this->endpoints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->endpoints(i), output);
  }

  // @@protoc_insertion_point(serialize_end:agrirouter.response.payload.account.ListEndpointsResponse)
}

::google::protobuf::uint8* ListEndpointsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.response.payload.account.ListEndpointsResponse)
  // repeated .agrirouter.response.payload.account.ListEndpointsResponse.Endpoint endpoints = 1;
  for (unsigned int i = 0, n = this->endpoints_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->endpoints(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.response.payload.account.ListEndpointsResponse)
  return target;
}

size_t ListEndpointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.response.payload.account.ListEndpointsResponse)
  size_t total_size = 0;

  // repeated .agrirouter.response.payload.account.ListEndpointsResponse.Endpoint endpoints = 1;
  {
    unsigned int count = this->endpoints_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->endpoints(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListEndpointsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.response.payload.account.ListEndpointsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListEndpointsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListEndpointsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.response.payload.account.ListEndpointsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.response.payload.account.ListEndpointsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListEndpointsResponse::MergeFrom(const ListEndpointsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.response.payload.account.ListEndpointsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListEndpointsResponse::UnsafeMergeFrom(const ListEndpointsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  endpoints_.MergeFrom(from.endpoints_);
}

void ListEndpointsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.response.payload.account.ListEndpointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListEndpointsResponse::CopyFrom(const ListEndpointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.response.payload.account.ListEndpointsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListEndpointsResponse::IsInitialized() const {

  return true;
}

void ListEndpointsResponse::Swap(ListEndpointsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListEndpointsResponse::InternalSwap(ListEndpointsResponse* other) {
  endpoints_.UnsafeArenaSwap(&other->endpoints_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListEndpointsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListEndpointsResponse_descriptor_;
  metadata.reflection = ListEndpointsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListEndpointsResponse_MessageType

// optional string technical_message_type = 1;
void ListEndpointsResponse_MessageType::clear_technical_message_type() {
  technical_message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEndpointsResponse_MessageType::technical_message_type() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type)
  return technical_message_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_MessageType::set_technical_message_type(const ::std::string& value) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type)
}
void ListEndpointsResponse_MessageType::set_technical_message_type(const char* value) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type)
}
void ListEndpointsResponse_MessageType::set_technical_message_type(const char* value, size_t size) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type)
}
::std::string* ListEndpointsResponse_MessageType::mutable_technical_message_type() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type)
  return technical_message_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEndpointsResponse_MessageType::release_technical_message_type() {
  // @@protoc_insertion_point(field_release:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type)
  
  return technical_message_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_MessageType::set_allocated_technical_message_type(::std::string* technical_message_type) {
  if (technical_message_type != NULL) {
    
  } else {
    
  }
  technical_message_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), technical_message_type);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.technical_message_type)
}

// optional .agrirouter.response.payload.account.ListEndpointsResponse.Direction direction = 2;
void ListEndpointsResponse_MessageType::clear_direction() {
  direction_ = 0;
}
::agrirouter::response::payload::account::ListEndpointsResponse_Direction ListEndpointsResponse_MessageType::direction() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.direction)
  return static_cast< ::agrirouter::response::payload::account::ListEndpointsResponse_Direction >(direction_);
}
void ListEndpointsResponse_MessageType::set_direction(::agrirouter::response::payload::account::ListEndpointsResponse_Direction value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:agrirouter.response.payload.account.ListEndpointsResponse.MessageType.direction)
}

inline const ListEndpointsResponse_MessageType* ListEndpointsResponse_MessageType::internal_default_instance() {
  return &ListEndpointsResponse_MessageType_default_instance_.get();
}
// -------------------------------------------------------------------

// ListEndpointsResponse_Endpoint

// optional string endpoint_id = 1;
void ListEndpointsResponse_Endpoint::clear_endpoint_id() {
  endpoint_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEndpointsResponse_Endpoint::endpoint_id() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id)
  return endpoint_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_endpoint_id(const ::std::string& value) {
  
  endpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id)
}
void ListEndpointsResponse_Endpoint::set_endpoint_id(const char* value) {
  
  endpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id)
}
void ListEndpointsResponse_Endpoint::set_endpoint_id(const char* value, size_t size) {
  
  endpoint_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id)
}
::std::string* ListEndpointsResponse_Endpoint::mutable_endpoint_id() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id)
  return endpoint_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEndpointsResponse_Endpoint::release_endpoint_id() {
  // @@protoc_insertion_point(field_release:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id)
  
  return endpoint_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_allocated_endpoint_id(::std::string* endpoint_id) {
  if (endpoint_id != NULL) {
    
  } else {
    
  }
  endpoint_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint_id);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_id)
}

// optional string endpoint_name = 2;
void ListEndpointsResponse_Endpoint::clear_endpoint_name() {
  endpoint_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEndpointsResponse_Endpoint::endpoint_name() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name)
  return endpoint_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_endpoint_name(const ::std::string& value) {
  
  endpoint_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name)
}
void ListEndpointsResponse_Endpoint::set_endpoint_name(const char* value) {
  
  endpoint_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name)
}
void ListEndpointsResponse_Endpoint::set_endpoint_name(const char* value, size_t size) {
  
  endpoint_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name)
}
::std::string* ListEndpointsResponse_Endpoint::mutable_endpoint_name() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name)
  return endpoint_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEndpointsResponse_Endpoint::release_endpoint_name() {
  // @@protoc_insertion_point(field_release:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name)
  
  return endpoint_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_allocated_endpoint_name(::std::string* endpoint_name) {
  if (endpoint_name != NULL) {
    
  } else {
    
  }
  endpoint_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint_name);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_name)
}

// optional string endpoint_type = 3;
void ListEndpointsResponse_Endpoint::clear_endpoint_type() {
  endpoint_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEndpointsResponse_Endpoint::endpoint_type() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type)
  return endpoint_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_endpoint_type(const ::std::string& value) {
  
  endpoint_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type)
}
void ListEndpointsResponse_Endpoint::set_endpoint_type(const char* value) {
  
  endpoint_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type)
}
void ListEndpointsResponse_Endpoint::set_endpoint_type(const char* value, size_t size) {
  
  endpoint_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type)
}
::std::string* ListEndpointsResponse_Endpoint::mutable_endpoint_type() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type)
  return endpoint_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEndpointsResponse_Endpoint::release_endpoint_type() {
  // @@protoc_insertion_point(field_release:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type)
  
  return endpoint_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_allocated_endpoint_type(::std::string* endpoint_type) {
  if (endpoint_type != NULL) {
    
  } else {
    
  }
  endpoint_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint_type);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.endpoint_type)
}

// optional string status = 4;
void ListEndpointsResponse_Endpoint::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEndpointsResponse_Endpoint::status() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status)
}
void ListEndpointsResponse_Endpoint::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status)
}
void ListEndpointsResponse_Endpoint::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status)
}
::std::string* ListEndpointsResponse_Endpoint::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEndpointsResponse_Endpoint::release_status() {
  // @@protoc_insertion_point(field_release:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.status)
}

// repeated .agrirouter.response.payload.account.ListEndpointsResponse.MessageType messageTypes = 5;
int ListEndpointsResponse_Endpoint::messagetypes_size() const {
  return messagetypes_.size();
}
void ListEndpointsResponse_Endpoint::clear_messagetypes() {
  messagetypes_.Clear();
}
const ::agrirouter::response::payload::account::ListEndpointsResponse_MessageType& ListEndpointsResponse_Endpoint::messagetypes(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.messageTypes)
  return messagetypes_.Get(index);
}
::agrirouter::response::payload::account::ListEndpointsResponse_MessageType* ListEndpointsResponse_Endpoint::mutable_messagetypes(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.messageTypes)
  return messagetypes_.Mutable(index);
}
::agrirouter::response::payload::account::ListEndpointsResponse_MessageType* ListEndpointsResponse_Endpoint::add_messagetypes() {
  // @@protoc_insertion_point(field_add:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.messageTypes)
  return messagetypes_.Add();
}
::google::protobuf::RepeatedPtrField< ::agrirouter::response::payload::account::ListEndpointsResponse_MessageType >*
ListEndpointsResponse_Endpoint::mutable_messagetypes() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.messageTypes)
  return &messagetypes_;
}
const ::google::protobuf::RepeatedPtrField< ::agrirouter::response::payload::account::ListEndpointsResponse_MessageType >&
ListEndpointsResponse_Endpoint::messagetypes() const {
  // @@protoc_insertion_point(field_list:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.messageTypes)
  return messagetypes_;
}

// optional string external_id = 6;
void ListEndpointsResponse_Endpoint::clear_external_id() {
  external_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListEndpointsResponse_Endpoint::external_id() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id)
  return external_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_external_id(const ::std::string& value) {
  
  external_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id)
}
void ListEndpointsResponse_Endpoint::set_external_id(const char* value) {
  
  external_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id)
}
void ListEndpointsResponse_Endpoint::set_external_id(const char* value, size_t size) {
  
  external_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id)
}
::std::string* ListEndpointsResponse_Endpoint::mutable_external_id() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id)
  return external_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListEndpointsResponse_Endpoint::release_external_id() {
  // @@protoc_insertion_point(field_release:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id)
  
  return external_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListEndpointsResponse_Endpoint::set_allocated_external_id(::std::string* external_id) {
  if (external_id != NULL) {
    
  } else {
    
  }
  external_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), external_id);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.payload.account.ListEndpointsResponse.Endpoint.external_id)
}

inline const ListEndpointsResponse_Endpoint* ListEndpointsResponse_Endpoint::internal_default_instance() {
  return &ListEndpointsResponse_Endpoint_default_instance_.get();
}
// -------------------------------------------------------------------

// ListEndpointsResponse

// repeated .agrirouter.response.payload.account.ListEndpointsResponse.Endpoint endpoints = 1;
int ListEndpointsResponse::endpoints_size() const {
  return endpoints_.size();
}
void ListEndpointsResponse::clear_endpoints() {
  endpoints_.Clear();
}
const ::agrirouter::response::payload::account::ListEndpointsResponse_Endpoint& ListEndpointsResponse::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.response.payload.account.ListEndpointsResponse.endpoints)
  return endpoints_.Get(index);
}
::agrirouter::response::payload::account::ListEndpointsResponse_Endpoint* ListEndpointsResponse::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.response.payload.account.ListEndpointsResponse.endpoints)
  return endpoints_.Mutable(index);
}
::agrirouter::response::payload::account::ListEndpointsResponse_Endpoint* ListEndpointsResponse::add_endpoints() {
  // @@protoc_insertion_point(field_add:agrirouter.response.payload.account.ListEndpointsResponse.endpoints)
  return endpoints_.Add();
}
::google::protobuf::RepeatedPtrField< ::agrirouter::response::payload::account::ListEndpointsResponse_Endpoint >*
ListEndpointsResponse::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.response.payload.account.ListEndpointsResponse.endpoints)
  return &endpoints_;
}
const ::google::protobuf::RepeatedPtrField< ::agrirouter::response::payload::account::ListEndpointsResponse_Endpoint >&
ListEndpointsResponse::endpoints() const {
  // @@protoc_insertion_point(field_list:agrirouter.response.payload.account.ListEndpointsResponse.endpoints)
  return endpoints_;
}

inline const ListEndpointsResponse* ListEndpointsResponse::internal_default_instance() {
  return &ListEndpointsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace account
}  // namespace payload
}  // namespace response
}  // namespace agrirouter

// @@protoc_insertion_point(global_scope)
