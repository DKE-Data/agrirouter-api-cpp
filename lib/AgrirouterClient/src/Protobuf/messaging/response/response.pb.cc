// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging/response/response.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messaging/response/response.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace agrirouter {
namespace response {

namespace {

const ::google::protobuf::Descriptor* ResponseEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseEnvelope_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ResponseEnvelope_ResponseBodyType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ResponsePayloadWrapper_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponsePayloadWrapper_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messaging_2fresponse_2fresponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messaging_2fresponse_2fresponse_2eproto() {
  protobuf_AddDesc_messaging_2fresponse_2fresponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messaging/response/response.proto");
  GOOGLE_CHECK(file != NULL);
  ResponseEnvelope_descriptor_ = file->message_type(0);
  static const int ResponseEnvelope_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEnvelope, response_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEnvelope, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEnvelope, application_message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEnvelope, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEnvelope, timestamp_),
  };
  ResponseEnvelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseEnvelope_descriptor_,
      ResponseEnvelope::internal_default_instance(),
      ResponseEnvelope_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponseEnvelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseEnvelope, _internal_metadata_));
  ResponseEnvelope_ResponseBodyType_descriptor_ = ResponseEnvelope_descriptor_->enum_type(0);
  ResponsePayloadWrapper_descriptor_ = file->message_type(1);
  static const int ResponsePayloadWrapper_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePayloadWrapper, details_),
  };
  ResponsePayloadWrapper_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponsePayloadWrapper_descriptor_,
      ResponsePayloadWrapper::internal_default_instance(),
      ResponsePayloadWrapper_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResponsePayloadWrapper),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponsePayloadWrapper, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messaging_2fresponse_2fresponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseEnvelope_descriptor_, ResponseEnvelope::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponsePayloadWrapper_descriptor_, ResponsePayloadWrapper::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messaging_2fresponse_2fresponse_2eproto() {
  ResponseEnvelope_default_instance_.Shutdown();
  delete ResponseEnvelope_reflection_;
  ResponsePayloadWrapper_default_instance_.Shutdown();
  delete ResponsePayloadWrapper_reflection_;
}

void protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ResponseEnvelope_default_instance_.DefaultConstruct();
  ResponsePayloadWrapper_default_instance_.DefaultConstruct();
  ResponseEnvelope_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResponsePayloadWrapper_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto_once_);
void protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto_once_,
                 &protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto_impl);
}
void protobuf_AddDesc_messaging_2fresponse_2fresponse_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!messaging/response/response.proto\022\023agr"
    "irouter.response\032\031google/protobuf/any.pr"
    "oto\032\037google/protobuf/timestamp.proto\"\264\003\n"
    "\020ResponseEnvelope\022\025\n\rresponse_code\030\001 \001(\005"
    "\022D\n\004type\030\002 \001(\01626.agrirouter.response.Res"
    "ponseEnvelope.ResponseBodyType\022\036\n\026applic"
    "ation_message_id\030\003 \001(\t\022\022\n\nmessage_id\030\004 \001"
    "(\t\022-\n\ttimestamp\030\005 \001(\0132\032.google.protobuf."
    "Timestamp\"\337\001\n\020ResponseBodyType\022\014\n\010MESSAG"
    "ES\020\000\022\007\n\003ACK\020\001\022\025\n\021ACK_WITH_MESSAGES\020\002\022\024\n\020"
    "ACK_WITH_FAILURE\020\003\022\034\n\030ACK_FOR_FEED_HEADE"
    "R_LIST\020\006\022\030\n\024ACK_FOR_FEED_MESSAGE\020\007\022\037\n\033AC"
    "K_FOR_FEED_FAILED_MESSAGE\020\010\022\025\n\021ENDPOINTS"
    "_LISTING\020\n\022\027\n\023CLOUD_REGISTRATIONS\020\013\"\?\n\026R"
    "esponsePayloadWrapper\022%\n\007details\030\001 \001(\0132\024"
    ".google.protobuf.Anyb\006proto3", 628);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messaging/response/response.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messaging_2fresponse_2fresponse_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_messaging_2fresponse_2fresponse_2eproto_once_);
void protobuf_AddDesc_messaging_2fresponse_2fresponse_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_messaging_2fresponse_2fresponse_2eproto_once_,
                 &protobuf_AddDesc_messaging_2fresponse_2fresponse_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messaging_2fresponse_2fresponse_2eproto {
  StaticDescriptorInitializer_messaging_2fresponse_2fresponse_2eproto() {
    protobuf_AddDesc_messaging_2fresponse_2fresponse_2eproto();
  }
} static_descriptor_initializer_messaging_2fresponse_2fresponse_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* ResponseEnvelope_ResponseBodyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseEnvelope_ResponseBodyType_descriptor_;
}
bool ResponseEnvelope_ResponseBodyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 6:
    case 7:
    case 8:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::MESSAGES;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ACK;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ACK_WITH_MESSAGES;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ACK_WITH_FAILURE;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ACK_FOR_FEED_HEADER_LIST;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ACK_FOR_FEED_MESSAGE;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ACK_FOR_FEED_FAILED_MESSAGE;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ENDPOINTS_LISTING;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::CLOUD_REGISTRATIONS;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ResponseBodyType_MIN;
const ResponseEnvelope_ResponseBodyType ResponseEnvelope::ResponseBodyType_MAX;
const int ResponseEnvelope::ResponseBodyType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseEnvelope::kResponseCodeFieldNumber;
const int ResponseEnvelope::kTypeFieldNumber;
const int ResponseEnvelope::kApplicationMessageIdFieldNumber;
const int ResponseEnvelope::kMessageIdFieldNumber;
const int ResponseEnvelope::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseEnvelope::ResponseEnvelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.response.ResponseEnvelope)
}

void ResponseEnvelope::InitAsDefaultInstance() {
  timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

ResponseEnvelope::ResponseEnvelope(const ResponseEnvelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:agrirouter.response.ResponseEnvelope)
}

void ResponseEnvelope::SharedCtor() {
  application_message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = NULL;
  ::memset(&response_code_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&response_code_) + sizeof(type_));
  _cached_size_ = 0;
}

ResponseEnvelope::~ResponseEnvelope() {
  // @@protoc_insertion_point(destructor:agrirouter.response.ResponseEnvelope)
  SharedDtor();
}

void ResponseEnvelope::SharedDtor() {
  application_message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ResponseEnvelope_default_instance_.get()) {
    delete timestamp_;
  }
}

void ResponseEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseEnvelope_descriptor_;
}

const ResponseEnvelope& ResponseEnvelope::default_instance() {
  protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResponseEnvelope> ResponseEnvelope_default_instance_;

ResponseEnvelope* ResponseEnvelope::New(::google::protobuf::Arena* arena) const {
  ResponseEnvelope* n = new ResponseEnvelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseEnvelope::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.response.ResponseEnvelope)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResponseEnvelope, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResponseEnvelope*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(response_code_, type_);
  application_message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ResponseEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.response.ResponseEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 response_code = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .agrirouter.response.ResponseEnvelope.ResponseBodyType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::agrirouter::response::ResponseEnvelope_ResponseBodyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_application_message_id;
        break;
      }

      // optional string application_message_id = 3;
      case 3: {
        if (tag == 26) {
         parse_application_message_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application_message_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->application_message_id().data(), this->application_message_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.ResponseEnvelope.application_message_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_message_id;
        break;
      }

      // optional string message_id = 4;
      case 4: {
        if (tag == 34) {
         parse_message_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_id().data(), this->message_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "agrirouter.response.ResponseEnvelope.message_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_timestamp;
        break;
      }

      // optional .google.protobuf.Timestamp timestamp = 5;
      case 5: {
        if (tag == 42) {
         parse_timestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.response.ResponseEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.response.ResponseEnvelope)
  return false;
#undef DO_
}

void ResponseEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.response.ResponseEnvelope)
  // optional int32 response_code = 1;
  if (this->response_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->response_code(), output);
  }

  // optional .agrirouter.response.ResponseEnvelope.ResponseBodyType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string application_message_id = 3;
  if (this->application_message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->application_message_id().data(), this->application_message_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.ResponseEnvelope.application_message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->application_message_id(), output);
  }

  // optional string message_id = 4;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), this->message_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.ResponseEnvelope.message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->message_id(), output);
  }

  // optional .google.protobuf.Timestamp timestamp = 5;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->timestamp_, output);
  }

  // @@protoc_insertion_point(serialize_end:agrirouter.response.ResponseEnvelope)
}

::google::protobuf::uint8* ResponseEnvelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.response.ResponseEnvelope)
  // optional int32 response_code = 1;
  if (this->response_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->response_code(), target);
  }

  // optional .agrirouter.response.ResponseEnvelope.ResponseBodyType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional string application_message_id = 3;
  if (this->application_message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->application_message_id().data(), this->application_message_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.ResponseEnvelope.application_message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->application_message_id(), target);
  }

  // optional string message_id = 4;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), this->message_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "agrirouter.response.ResponseEnvelope.message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->message_id(), target);
  }

  // optional .google.protobuf.Timestamp timestamp = 5;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->timestamp_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.response.ResponseEnvelope)
  return target;
}

size_t ResponseEnvelope::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.response.ResponseEnvelope)
  size_t total_size = 0;

  // optional int32 response_code = 1;
  if (this->response_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_code());
  }

  // optional .agrirouter.response.ResponseEnvelope.ResponseBodyType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string application_message_id = 3;
  if (this->application_message_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->application_message_id());
  }

  // optional string message_id = 4;
  if (this->message_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());
  }

  // optional .google.protobuf.Timestamp timestamp = 5;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.response.ResponseEnvelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResponseEnvelope* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseEnvelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.response.ResponseEnvelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.response.ResponseEnvelope)
    UnsafeMergeFrom(*source);
  }
}

void ResponseEnvelope::MergeFrom(const ResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.response.ResponseEnvelope)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResponseEnvelope::UnsafeMergeFrom(const ResponseEnvelope& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.response_code() != 0) {
    set_response_code(from.response_code());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.application_message_id().size() > 0) {

    application_message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.application_message_id_);
  }
  if (from.message_id().size() > 0) {

    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
}

void ResponseEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.response.ResponseEnvelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseEnvelope::CopyFrom(const ResponseEnvelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.response.ResponseEnvelope)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResponseEnvelope::IsInitialized() const {

  return true;
}

void ResponseEnvelope::Swap(ResponseEnvelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseEnvelope::InternalSwap(ResponseEnvelope* other) {
  std::swap(response_code_, other->response_code_);
  std::swap(type_, other->type_);
  application_message_id_.Swap(&other->application_message_id_);
  message_id_.Swap(&other->message_id_);
  std::swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseEnvelope_descriptor_;
  metadata.reflection = ResponseEnvelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseEnvelope

// optional int32 response_code = 1;
void ResponseEnvelope::clear_response_code() {
  response_code_ = 0;
}
::google::protobuf::int32 ResponseEnvelope::response_code() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.ResponseEnvelope.response_code)
  return response_code_;
}
void ResponseEnvelope::set_response_code(::google::protobuf::int32 value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:agrirouter.response.ResponseEnvelope.response_code)
}

// optional .agrirouter.response.ResponseEnvelope.ResponseBodyType type = 2;
void ResponseEnvelope::clear_type() {
  type_ = 0;
}
::agrirouter::response::ResponseEnvelope_ResponseBodyType ResponseEnvelope::type() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.ResponseEnvelope.type)
  return static_cast< ::agrirouter::response::ResponseEnvelope_ResponseBodyType >(type_);
}
void ResponseEnvelope::set_type(::agrirouter::response::ResponseEnvelope_ResponseBodyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:agrirouter.response.ResponseEnvelope.type)
}

// optional string application_message_id = 3;
void ResponseEnvelope::clear_application_message_id() {
  application_message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseEnvelope::application_message_id() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.ResponseEnvelope.application_message_id)
  return application_message_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseEnvelope::set_application_message_id(const ::std::string& value) {
  
  application_message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.ResponseEnvelope.application_message_id)
}
void ResponseEnvelope::set_application_message_id(const char* value) {
  
  application_message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.ResponseEnvelope.application_message_id)
}
void ResponseEnvelope::set_application_message_id(const char* value, size_t size) {
  
  application_message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.ResponseEnvelope.application_message_id)
}
::std::string* ResponseEnvelope::mutable_application_message_id() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.ResponseEnvelope.application_message_id)
  return application_message_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseEnvelope::release_application_message_id() {
  // @@protoc_insertion_point(field_release:agrirouter.response.ResponseEnvelope.application_message_id)
  
  return application_message_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseEnvelope::set_allocated_application_message_id(::std::string* application_message_id) {
  if (application_message_id != NULL) {
    
  } else {
    
  }
  application_message_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), application_message_id);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.ResponseEnvelope.application_message_id)
}

// optional string message_id = 4;
void ResponseEnvelope::clear_message_id() {
  message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseEnvelope::message_id() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.ResponseEnvelope.message_id)
  return message_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseEnvelope::set_message_id(const ::std::string& value) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.response.ResponseEnvelope.message_id)
}
void ResponseEnvelope::set_message_id(const char* value) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.response.ResponseEnvelope.message_id)
}
void ResponseEnvelope::set_message_id(const char* value, size_t size) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.response.ResponseEnvelope.message_id)
}
::std::string* ResponseEnvelope::mutable_message_id() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.response.ResponseEnvelope.message_id)
  return message_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseEnvelope::release_message_id() {
  // @@protoc_insertion_point(field_release:agrirouter.response.ResponseEnvelope.message_id)
  
  return message_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseEnvelope::set_allocated_message_id(::std::string* message_id) {
  if (message_id != NULL) {
    
  } else {
    
  }
  message_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_id);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.ResponseEnvelope.message_id)
}

// optional .google.protobuf.Timestamp timestamp = 5;
bool ResponseEnvelope::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
void ResponseEnvelope::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
const ::google::protobuf::Timestamp& ResponseEnvelope::timestamp() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.ResponseEnvelope.timestamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* ResponseEnvelope::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.response.ResponseEnvelope.timestamp)
  return timestamp_;
}
::google::protobuf::Timestamp* ResponseEnvelope::release_timestamp() {
  // @@protoc_insertion_point(field_release:agrirouter.response.ResponseEnvelope.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
void ResponseEnvelope::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.ResponseEnvelope.timestamp)
}

inline const ResponseEnvelope* ResponseEnvelope::internal_default_instance() {
  return &ResponseEnvelope_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponsePayloadWrapper::kDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponsePayloadWrapper::ResponsePayloadWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:agrirouter.response.ResponsePayloadWrapper)
}

void ResponsePayloadWrapper::InitAsDefaultInstance() {
  details_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

ResponsePayloadWrapper::ResponsePayloadWrapper(const ResponsePayloadWrapper& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:agrirouter.response.ResponsePayloadWrapper)
}

void ResponsePayloadWrapper::SharedCtor() {
  details_ = NULL;
  _cached_size_ = 0;
}

ResponsePayloadWrapper::~ResponsePayloadWrapper() {
  // @@protoc_insertion_point(destructor:agrirouter.response.ResponsePayloadWrapper)
  SharedDtor();
}

void ResponsePayloadWrapper::SharedDtor() {
  if (this != &ResponsePayloadWrapper_default_instance_.get()) {
    delete details_;
  }
}

void ResponsePayloadWrapper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponsePayloadWrapper::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponsePayloadWrapper_descriptor_;
}

const ResponsePayloadWrapper& ResponsePayloadWrapper::default_instance() {
  protobuf_InitDefaults_messaging_2fresponse_2fresponse_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResponsePayloadWrapper> ResponsePayloadWrapper_default_instance_;

ResponsePayloadWrapper* ResponsePayloadWrapper::New(::google::protobuf::Arena* arena) const {
  ResponsePayloadWrapper* n = new ResponsePayloadWrapper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponsePayloadWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:agrirouter.response.ResponsePayloadWrapper)
  if (GetArenaNoVirtual() == NULL && details_ != NULL) delete details_;
  details_ = NULL;
}

bool ResponsePayloadWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:agrirouter.response.ResponsePayloadWrapper)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Any details = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_details()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:agrirouter.response.ResponsePayloadWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:agrirouter.response.ResponsePayloadWrapper)
  return false;
#undef DO_
}

void ResponsePayloadWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:agrirouter.response.ResponsePayloadWrapper)
  // optional .google.protobuf.Any details = 1;
  if (this->has_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->details_, output);
  }

  // @@protoc_insertion_point(serialize_end:agrirouter.response.ResponsePayloadWrapper)
}

::google::protobuf::uint8* ResponsePayloadWrapper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:agrirouter.response.ResponsePayloadWrapper)
  // optional .google.protobuf.Any details = 1;
  if (this->has_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->details_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:agrirouter.response.ResponsePayloadWrapper)
  return target;
}

size_t ResponsePayloadWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agrirouter.response.ResponsePayloadWrapper)
  size_t total_size = 0;

  // optional .google.protobuf.Any details = 1;
  if (this->has_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->details_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponsePayloadWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:agrirouter.response.ResponsePayloadWrapper)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResponsePayloadWrapper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponsePayloadWrapper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:agrirouter.response.ResponsePayloadWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:agrirouter.response.ResponsePayloadWrapper)
    UnsafeMergeFrom(*source);
  }
}

void ResponsePayloadWrapper::MergeFrom(const ResponsePayloadWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:agrirouter.response.ResponsePayloadWrapper)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResponsePayloadWrapper::UnsafeMergeFrom(const ResponsePayloadWrapper& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_details()) {
    mutable_details()->::google::protobuf::Any::MergeFrom(from.details());
  }
}

void ResponsePayloadWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:agrirouter.response.ResponsePayloadWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponsePayloadWrapper::CopyFrom(const ResponsePayloadWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agrirouter.response.ResponsePayloadWrapper)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResponsePayloadWrapper::IsInitialized() const {

  return true;
}

void ResponsePayloadWrapper::Swap(ResponsePayloadWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponsePayloadWrapper::InternalSwap(ResponsePayloadWrapper* other) {
  std::swap(details_, other->details_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponsePayloadWrapper::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponsePayloadWrapper_descriptor_;
  metadata.reflection = ResponsePayloadWrapper_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponsePayloadWrapper

// optional .google.protobuf.Any details = 1;
bool ResponsePayloadWrapper::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
void ResponsePayloadWrapper::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) delete details_;
  details_ = NULL;
}
const ::google::protobuf::Any& ResponsePayloadWrapper::details() const {
  // @@protoc_insertion_point(field_get:agrirouter.response.ResponsePayloadWrapper.details)
  return details_ != NULL ? *details_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* ResponsePayloadWrapper::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.response.ResponsePayloadWrapper.details)
  return details_;
}
::google::protobuf::Any* ResponsePayloadWrapper::release_details() {
  // @@protoc_insertion_point(field_release:agrirouter.response.ResponsePayloadWrapper.details)
  
  ::google::protobuf::Any* temp = details_;
  details_ = NULL;
  return temp;
}
void ResponsePayloadWrapper::set_allocated_details(::google::protobuf::Any* details) {
  delete details_;
  details_ = details;
  if (details) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.response.ResponsePayloadWrapper.details)
}

inline const ResponsePayloadWrapper* ResponsePayloadWrapper::internal_default_instance() {
  return &ResponsePayloadWrapper_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace response
}  // namespace agrirouter

// @@protoc_insertion_point(global_scope)
