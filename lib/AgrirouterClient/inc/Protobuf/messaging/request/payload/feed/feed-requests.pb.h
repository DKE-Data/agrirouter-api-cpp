// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging/request/payload/feed/feed-requests.proto

#ifndef PROTOBUF_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto__INCLUDED
#define PROTOBUF_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace agrirouter {
namespace feed {
namespace request {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();
void protobuf_InitDefaults_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();
void protobuf_AssignDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();
void protobuf_ShutdownFile_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();

class MessageConfirm;
class MessageDelete;
class MessageQuery;
class ValidityPeriod;

// ===================================================================

class ValidityPeriod : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.feed.request.ValidityPeriod) */ {
 public:
  ValidityPeriod();
  virtual ~ValidityPeriod();

  ValidityPeriod(const ValidityPeriod& from);

  inline ValidityPeriod& operator=(const ValidityPeriod& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValidityPeriod& default_instance();

  static const ValidityPeriod* internal_default_instance();

  void Swap(ValidityPeriod* other);

  // implements Message ----------------------------------------------

  inline ValidityPeriod* New() const { return New(NULL); }

  ValidityPeriod* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ValidityPeriod& from);
  void MergeFrom(const ValidityPeriod& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValidityPeriod* other);
  void UnsafeMergeFrom(const ValidityPeriod& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Timestamp sentFrom = 1;
  bool has_sentfrom() const;
  void clear_sentfrom();
  static const int kSentFromFieldNumber = 1;
  const ::google::protobuf::Timestamp& sentfrom() const;
  ::google::protobuf::Timestamp* mutable_sentfrom();
  ::google::protobuf::Timestamp* release_sentfrom();
  void set_allocated_sentfrom(::google::protobuf::Timestamp* sentfrom);

  // optional .google.protobuf.Timestamp sentTo = 2;
  bool has_sentto() const;
  void clear_sentto();
  static const int kSentToFieldNumber = 2;
  const ::google::protobuf::Timestamp& sentto() const;
  ::google::protobuf::Timestamp* mutable_sentto();
  ::google::protobuf::Timestamp* release_sentto();
  void set_allocated_sentto(::google::protobuf::Timestamp* sentto);

  // @@protoc_insertion_point(class_scope:agrirouter.feed.request.ValidityPeriod)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* sentfrom_;
  ::google::protobuf::Timestamp* sentto_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void  protobuf_AddDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void protobuf_AssignDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();
  friend void protobuf_ShutdownFile_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ValidityPeriod> ValidityPeriod_default_instance_;

// -------------------------------------------------------------------

class MessageQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.feed.request.MessageQuery) */ {
 public:
  MessageQuery();
  virtual ~MessageQuery();

  MessageQuery(const MessageQuery& from);

  inline MessageQuery& operator=(const MessageQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageQuery& default_instance();

  static const MessageQuery* internal_default_instance();

  void Swap(MessageQuery* other);

  // implements Message ----------------------------------------------

  inline MessageQuery* New() const { return New(NULL); }

  MessageQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageQuery& from);
  void MergeFrom(const MessageQuery& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageQuery* other);
  void UnsafeMergeFrom(const MessageQuery& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string message_ids = 1;
  int message_ids_size() const;
  void clear_message_ids();
  static const int kMessageIdsFieldNumber = 1;
  const ::std::string& message_ids(int index) const;
  ::std::string* mutable_message_ids(int index);
  void set_message_ids(int index, const ::std::string& value);
  void set_message_ids(int index, const char* value);
  void set_message_ids(int index, const char* value, size_t size);
  ::std::string* add_message_ids();
  void add_message_ids(const ::std::string& value);
  void add_message_ids(const char* value);
  void add_message_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& message_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_message_ids();

  // repeated string senders = 2;
  int senders_size() const;
  void clear_senders();
  static const int kSendersFieldNumber = 2;
  const ::std::string& senders(int index) const;
  ::std::string* mutable_senders(int index);
  void set_senders(int index, const ::std::string& value);
  void set_senders(int index, const char* value);
  void set_senders(int index, const char* value, size_t size);
  ::std::string* add_senders();
  void add_senders(const ::std::string& value);
  void add_senders(const char* value);
  void add_senders(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& senders() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_senders();

  // optional .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  bool has_validity_period() const;
  void clear_validity_period();
  static const int kValidityPeriodFieldNumber = 3;
  const ::agrirouter::feed::request::ValidityPeriod& validity_period() const;
  ::agrirouter::feed::request::ValidityPeriod* mutable_validity_period();
  ::agrirouter::feed::request::ValidityPeriod* release_validity_period();
  void set_allocated_validity_period(::agrirouter::feed::request::ValidityPeriod* validity_period);

  // @@protoc_insertion_point(class_scope:agrirouter.feed.request.MessageQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> message_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> senders_;
  ::agrirouter::feed::request::ValidityPeriod* validity_period_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void  protobuf_AddDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void protobuf_AssignDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();
  friend void protobuf_ShutdownFile_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MessageQuery> MessageQuery_default_instance_;

// -------------------------------------------------------------------

class MessageConfirm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.feed.request.MessageConfirm) */ {
 public:
  MessageConfirm();
  virtual ~MessageConfirm();

  MessageConfirm(const MessageConfirm& from);

  inline MessageConfirm& operator=(const MessageConfirm& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageConfirm& default_instance();

  static const MessageConfirm* internal_default_instance();

  void Swap(MessageConfirm* other);

  // implements Message ----------------------------------------------

  inline MessageConfirm* New() const { return New(NULL); }

  MessageConfirm* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageConfirm& from);
  void MergeFrom(const MessageConfirm& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageConfirm* other);
  void UnsafeMergeFrom(const MessageConfirm& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string message_ids = 1;
  int message_ids_size() const;
  void clear_message_ids();
  static const int kMessageIdsFieldNumber = 1;
  const ::std::string& message_ids(int index) const;
  ::std::string* mutable_message_ids(int index);
  void set_message_ids(int index, const ::std::string& value);
  void set_message_ids(int index, const char* value);
  void set_message_ids(int index, const char* value, size_t size);
  ::std::string* add_message_ids();
  void add_message_ids(const ::std::string& value);
  void add_message_ids(const char* value);
  void add_message_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& message_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_message_ids();

  // @@protoc_insertion_point(class_scope:agrirouter.feed.request.MessageConfirm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> message_ids_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void  protobuf_AddDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void protobuf_AssignDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();
  friend void protobuf_ShutdownFile_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MessageConfirm> MessageConfirm_default_instance_;

// -------------------------------------------------------------------

class MessageDelete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.feed.request.MessageDelete) */ {
 public:
  MessageDelete();
  virtual ~MessageDelete();

  MessageDelete(const MessageDelete& from);

  inline MessageDelete& operator=(const MessageDelete& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDelete& default_instance();

  static const MessageDelete* internal_default_instance();

  void Swap(MessageDelete* other);

  // implements Message ----------------------------------------------

  inline MessageDelete* New() const { return New(NULL); }

  MessageDelete* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDelete& from);
  void MergeFrom(const MessageDelete& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageDelete* other);
  void UnsafeMergeFrom(const MessageDelete& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string message_ids = 1;
  int message_ids_size() const;
  void clear_message_ids();
  static const int kMessageIdsFieldNumber = 1;
  const ::std::string& message_ids(int index) const;
  ::std::string* mutable_message_ids(int index);
  void set_message_ids(int index, const ::std::string& value);
  void set_message_ids(int index, const char* value);
  void set_message_ids(int index, const char* value, size_t size);
  ::std::string* add_message_ids();
  void add_message_ids(const ::std::string& value);
  void add_message_ids(const char* value);
  void add_message_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& message_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_message_ids();

  // repeated string senders = 2;
  int senders_size() const;
  void clear_senders();
  static const int kSendersFieldNumber = 2;
  const ::std::string& senders(int index) const;
  ::std::string* mutable_senders(int index);
  void set_senders(int index, const ::std::string& value);
  void set_senders(int index, const char* value);
  void set_senders(int index, const char* value, size_t size);
  ::std::string* add_senders();
  void add_senders(const ::std::string& value);
  void add_senders(const char* value);
  void add_senders(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& senders() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_senders();

  // optional .agrirouter.feed.request.ValidityPeriod validity_period = 3;
  bool has_validity_period() const;
  void clear_validity_period();
  static const int kValidityPeriodFieldNumber = 3;
  const ::agrirouter::feed::request::ValidityPeriod& validity_period() const;
  ::agrirouter::feed::request::ValidityPeriod* mutable_validity_period();
  ::agrirouter::feed::request::ValidityPeriod* release_validity_period();
  void set_allocated_validity_period(::agrirouter::feed::request::ValidityPeriod* validity_period);

  // @@protoc_insertion_point(class_scope:agrirouter.feed.request.MessageDelete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> message_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> senders_;
  ::agrirouter::feed::request::ValidityPeriod* validity_period_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void  protobuf_AddDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto_impl();
  friend void protobuf_AssignDesc_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();
  friend void protobuf_ShutdownFile_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MessageDelete> MessageDelete_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ValidityPeriod

// optional .google.protobuf.Timestamp sentFrom = 1;
inline bool ValidityPeriod::has_sentfrom() const {
  return this != internal_default_instance() && sentfrom_ != NULL;
}
inline void ValidityPeriod::clear_sentfrom() {
  if (GetArenaNoVirtual() == NULL && sentfrom_ != NULL) delete sentfrom_;
  sentfrom_ = NULL;
}
inline const ::google::protobuf::Timestamp& ValidityPeriod::sentfrom() const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.ValidityPeriod.sentFrom)
  return sentfrom_ != NULL ? *sentfrom_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ValidityPeriod::mutable_sentfrom() {
  
  if (sentfrom_ == NULL) {
    sentfrom_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.ValidityPeriod.sentFrom)
  return sentfrom_;
}
inline ::google::protobuf::Timestamp* ValidityPeriod::release_sentfrom() {
  // @@protoc_insertion_point(field_release:agrirouter.feed.request.ValidityPeriod.sentFrom)
  
  ::google::protobuf::Timestamp* temp = sentfrom_;
  sentfrom_ = NULL;
  return temp;
}
inline void ValidityPeriod::set_allocated_sentfrom(::google::protobuf::Timestamp* sentfrom) {
  delete sentfrom_;
  if (sentfrom != NULL && sentfrom->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_sentfrom = new ::google::protobuf::Timestamp;
    new_sentfrom->CopyFrom(*sentfrom);
    sentfrom = new_sentfrom;
  }
  sentfrom_ = sentfrom;
  if (sentfrom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.feed.request.ValidityPeriod.sentFrom)
}

// optional .google.protobuf.Timestamp sentTo = 2;
inline bool ValidityPeriod::has_sentto() const {
  return this != internal_default_instance() && sentto_ != NULL;
}
inline void ValidityPeriod::clear_sentto() {
  if (GetArenaNoVirtual() == NULL && sentto_ != NULL) delete sentto_;
  sentto_ = NULL;
}
inline const ::google::protobuf::Timestamp& ValidityPeriod::sentto() const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.ValidityPeriod.sentTo)
  return sentto_ != NULL ? *sentto_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* ValidityPeriod::mutable_sentto() {
  
  if (sentto_ == NULL) {
    sentto_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.ValidityPeriod.sentTo)
  return sentto_;
}
inline ::google::protobuf::Timestamp* ValidityPeriod::release_sentto() {
  // @@protoc_insertion_point(field_release:agrirouter.feed.request.ValidityPeriod.sentTo)
  
  ::google::protobuf::Timestamp* temp = sentto_;
  sentto_ = NULL;
  return temp;
}
inline void ValidityPeriod::set_allocated_sentto(::google::protobuf::Timestamp* sentto) {
  delete sentto_;
  if (sentto != NULL && sentto->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_sentto = new ::google::protobuf::Timestamp;
    new_sentto->CopyFrom(*sentto);
    sentto = new_sentto;
  }
  sentto_ = sentto;
  if (sentto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.feed.request.ValidityPeriod.sentTo)
}

inline const ValidityPeriod* ValidityPeriod::internal_default_instance() {
  return &ValidityPeriod_default_instance_.get();
}
// -------------------------------------------------------------------

// MessageQuery

// repeated string message_ids = 1;
inline int MessageQuery::message_ids_size() const {
  return message_ids_.size();
}
inline void MessageQuery::clear_message_ids() {
  message_ids_.Clear();
}
inline const ::std::string& MessageQuery::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.MessageQuery.message_ids)
  return message_ids_.Get(index);
}
inline ::std::string* MessageQuery::mutable_message_ids(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.MessageQuery.message_ids)
  return message_ids_.Mutable(index);
}
inline void MessageQuery::set_message_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:agrirouter.feed.request.MessageQuery.message_ids)
  message_ids_.Mutable(index)->assign(value);
}
inline void MessageQuery::set_message_ids(int index, const char* value) {
  message_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:agrirouter.feed.request.MessageQuery.message_ids)
}
inline void MessageQuery::set_message_ids(int index, const char* value, size_t size) {
  message_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:agrirouter.feed.request.MessageQuery.message_ids)
}
inline ::std::string* MessageQuery::add_message_ids() {
  // @@protoc_insertion_point(field_add_mutable:agrirouter.feed.request.MessageQuery.message_ids)
  return message_ids_.Add();
}
inline void MessageQuery::add_message_ids(const ::std::string& value) {
  message_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:agrirouter.feed.request.MessageQuery.message_ids)
}
inline void MessageQuery::add_message_ids(const char* value) {
  message_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:agrirouter.feed.request.MessageQuery.message_ids)
}
inline void MessageQuery::add_message_ids(const char* value, size_t size) {
  message_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:agrirouter.feed.request.MessageQuery.message_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageQuery::message_ids() const {
  // @@protoc_insertion_point(field_list:agrirouter.feed.request.MessageQuery.message_ids)
  return message_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageQuery::mutable_message_ids() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.feed.request.MessageQuery.message_ids)
  return &message_ids_;
}

// repeated string senders = 2;
inline int MessageQuery::senders_size() const {
  return senders_.size();
}
inline void MessageQuery::clear_senders() {
  senders_.Clear();
}
inline const ::std::string& MessageQuery::senders(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.MessageQuery.senders)
  return senders_.Get(index);
}
inline ::std::string* MessageQuery::mutable_senders(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.MessageQuery.senders)
  return senders_.Mutable(index);
}
inline void MessageQuery::set_senders(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:agrirouter.feed.request.MessageQuery.senders)
  senders_.Mutable(index)->assign(value);
}
inline void MessageQuery::set_senders(int index, const char* value) {
  senders_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:agrirouter.feed.request.MessageQuery.senders)
}
inline void MessageQuery::set_senders(int index, const char* value, size_t size) {
  senders_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:agrirouter.feed.request.MessageQuery.senders)
}
inline ::std::string* MessageQuery::add_senders() {
  // @@protoc_insertion_point(field_add_mutable:agrirouter.feed.request.MessageQuery.senders)
  return senders_.Add();
}
inline void MessageQuery::add_senders(const ::std::string& value) {
  senders_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:agrirouter.feed.request.MessageQuery.senders)
}
inline void MessageQuery::add_senders(const char* value) {
  senders_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:agrirouter.feed.request.MessageQuery.senders)
}
inline void MessageQuery::add_senders(const char* value, size_t size) {
  senders_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:agrirouter.feed.request.MessageQuery.senders)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageQuery::senders() const {
  // @@protoc_insertion_point(field_list:agrirouter.feed.request.MessageQuery.senders)
  return senders_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageQuery::mutable_senders() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.feed.request.MessageQuery.senders)
  return &senders_;
}

// optional .agrirouter.feed.request.ValidityPeriod validity_period = 3;
inline bool MessageQuery::has_validity_period() const {
  return this != internal_default_instance() && validity_period_ != NULL;
}
inline void MessageQuery::clear_validity_period() {
  if (GetArenaNoVirtual() == NULL && validity_period_ != NULL) delete validity_period_;
  validity_period_ = NULL;
}
inline const ::agrirouter::feed::request::ValidityPeriod& MessageQuery::validity_period() const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.MessageQuery.validity_period)
  return validity_period_ != NULL ? *validity_period_
                         : *::agrirouter::feed::request::ValidityPeriod::internal_default_instance();
}
inline ::agrirouter::feed::request::ValidityPeriod* MessageQuery::mutable_validity_period() {
  
  if (validity_period_ == NULL) {
    validity_period_ = new ::agrirouter::feed::request::ValidityPeriod;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.MessageQuery.validity_period)
  return validity_period_;
}
inline ::agrirouter::feed::request::ValidityPeriod* MessageQuery::release_validity_period() {
  // @@protoc_insertion_point(field_release:agrirouter.feed.request.MessageQuery.validity_period)
  
  ::agrirouter::feed::request::ValidityPeriod* temp = validity_period_;
  validity_period_ = NULL;
  return temp;
}
inline void MessageQuery::set_allocated_validity_period(::agrirouter::feed::request::ValidityPeriod* validity_period) {
  delete validity_period_;
  validity_period_ = validity_period;
  if (validity_period) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.feed.request.MessageQuery.validity_period)
}

inline const MessageQuery* MessageQuery::internal_default_instance() {
  return &MessageQuery_default_instance_.get();
}
// -------------------------------------------------------------------

// MessageConfirm

// repeated string message_ids = 1;
inline int MessageConfirm::message_ids_size() const {
  return message_ids_.size();
}
inline void MessageConfirm::clear_message_ids() {
  message_ids_.Clear();
}
inline const ::std::string& MessageConfirm::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.MessageConfirm.message_ids)
  return message_ids_.Get(index);
}
inline ::std::string* MessageConfirm::mutable_message_ids(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.MessageConfirm.message_ids)
  return message_ids_.Mutable(index);
}
inline void MessageConfirm::set_message_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:agrirouter.feed.request.MessageConfirm.message_ids)
  message_ids_.Mutable(index)->assign(value);
}
inline void MessageConfirm::set_message_ids(int index, const char* value) {
  message_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:agrirouter.feed.request.MessageConfirm.message_ids)
}
inline void MessageConfirm::set_message_ids(int index, const char* value, size_t size) {
  message_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:agrirouter.feed.request.MessageConfirm.message_ids)
}
inline ::std::string* MessageConfirm::add_message_ids() {
  // @@protoc_insertion_point(field_add_mutable:agrirouter.feed.request.MessageConfirm.message_ids)
  return message_ids_.Add();
}
inline void MessageConfirm::add_message_ids(const ::std::string& value) {
  message_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:agrirouter.feed.request.MessageConfirm.message_ids)
}
inline void MessageConfirm::add_message_ids(const char* value) {
  message_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:agrirouter.feed.request.MessageConfirm.message_ids)
}
inline void MessageConfirm::add_message_ids(const char* value, size_t size) {
  message_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:agrirouter.feed.request.MessageConfirm.message_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageConfirm::message_ids() const {
  // @@protoc_insertion_point(field_list:agrirouter.feed.request.MessageConfirm.message_ids)
  return message_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageConfirm::mutable_message_ids() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.feed.request.MessageConfirm.message_ids)
  return &message_ids_;
}

inline const MessageConfirm* MessageConfirm::internal_default_instance() {
  return &MessageConfirm_default_instance_.get();
}
// -------------------------------------------------------------------

// MessageDelete

// repeated string message_ids = 1;
inline int MessageDelete::message_ids_size() const {
  return message_ids_.size();
}
inline void MessageDelete::clear_message_ids() {
  message_ids_.Clear();
}
inline const ::std::string& MessageDelete::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.MessageDelete.message_ids)
  return message_ids_.Get(index);
}
inline ::std::string* MessageDelete::mutable_message_ids(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.MessageDelete.message_ids)
  return message_ids_.Mutable(index);
}
inline void MessageDelete::set_message_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:agrirouter.feed.request.MessageDelete.message_ids)
  message_ids_.Mutable(index)->assign(value);
}
inline void MessageDelete::set_message_ids(int index, const char* value) {
  message_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:agrirouter.feed.request.MessageDelete.message_ids)
}
inline void MessageDelete::set_message_ids(int index, const char* value, size_t size) {
  message_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:agrirouter.feed.request.MessageDelete.message_ids)
}
inline ::std::string* MessageDelete::add_message_ids() {
  // @@protoc_insertion_point(field_add_mutable:agrirouter.feed.request.MessageDelete.message_ids)
  return message_ids_.Add();
}
inline void MessageDelete::add_message_ids(const ::std::string& value) {
  message_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:agrirouter.feed.request.MessageDelete.message_ids)
}
inline void MessageDelete::add_message_ids(const char* value) {
  message_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:agrirouter.feed.request.MessageDelete.message_ids)
}
inline void MessageDelete::add_message_ids(const char* value, size_t size) {
  message_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:agrirouter.feed.request.MessageDelete.message_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageDelete::message_ids() const {
  // @@protoc_insertion_point(field_list:agrirouter.feed.request.MessageDelete.message_ids)
  return message_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageDelete::mutable_message_ids() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.feed.request.MessageDelete.message_ids)
  return &message_ids_;
}

// repeated string senders = 2;
inline int MessageDelete::senders_size() const {
  return senders_.size();
}
inline void MessageDelete::clear_senders() {
  senders_.Clear();
}
inline const ::std::string& MessageDelete::senders(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.MessageDelete.senders)
  return senders_.Get(index);
}
inline ::std::string* MessageDelete::mutable_senders(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.MessageDelete.senders)
  return senders_.Mutable(index);
}
inline void MessageDelete::set_senders(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:agrirouter.feed.request.MessageDelete.senders)
  senders_.Mutable(index)->assign(value);
}
inline void MessageDelete::set_senders(int index, const char* value) {
  senders_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:agrirouter.feed.request.MessageDelete.senders)
}
inline void MessageDelete::set_senders(int index, const char* value, size_t size) {
  senders_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:agrirouter.feed.request.MessageDelete.senders)
}
inline ::std::string* MessageDelete::add_senders() {
  // @@protoc_insertion_point(field_add_mutable:agrirouter.feed.request.MessageDelete.senders)
  return senders_.Add();
}
inline void MessageDelete::add_senders(const ::std::string& value) {
  senders_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:agrirouter.feed.request.MessageDelete.senders)
}
inline void MessageDelete::add_senders(const char* value) {
  senders_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:agrirouter.feed.request.MessageDelete.senders)
}
inline void MessageDelete::add_senders(const char* value, size_t size) {
  senders_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:agrirouter.feed.request.MessageDelete.senders)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageDelete::senders() const {
  // @@protoc_insertion_point(field_list:agrirouter.feed.request.MessageDelete.senders)
  return senders_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MessageDelete::mutable_senders() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.feed.request.MessageDelete.senders)
  return &senders_;
}

// optional .agrirouter.feed.request.ValidityPeriod validity_period = 3;
inline bool MessageDelete::has_validity_period() const {
  return this != internal_default_instance() && validity_period_ != NULL;
}
inline void MessageDelete::clear_validity_period() {
  if (GetArenaNoVirtual() == NULL && validity_period_ != NULL) delete validity_period_;
  validity_period_ = NULL;
}
inline const ::agrirouter::feed::request::ValidityPeriod& MessageDelete::validity_period() const {
  // @@protoc_insertion_point(field_get:agrirouter.feed.request.MessageDelete.validity_period)
  return validity_period_ != NULL ? *validity_period_
                         : *::agrirouter::feed::request::ValidityPeriod::internal_default_instance();
}
inline ::agrirouter::feed::request::ValidityPeriod* MessageDelete::mutable_validity_period() {
  
  if (validity_period_ == NULL) {
    validity_period_ = new ::agrirouter::feed::request::ValidityPeriod;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.feed.request.MessageDelete.validity_period)
  return validity_period_;
}
inline ::agrirouter::feed::request::ValidityPeriod* MessageDelete::release_validity_period() {
  // @@protoc_insertion_point(field_release:agrirouter.feed.request.MessageDelete.validity_period)
  
  ::agrirouter::feed::request::ValidityPeriod* temp = validity_period_;
  validity_period_ = NULL;
  return temp;
}
inline void MessageDelete::set_allocated_validity_period(::agrirouter::feed::request::ValidityPeriod* validity_period) {
  delete validity_period_;
  validity_period_ = validity_period;
  if (validity_period) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.feed.request.MessageDelete.validity_period)
}

inline const MessageDelete* MessageDelete::internal_default_instance() {
  return &MessageDelete_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace request
}  // namespace feed
}  // namespace agrirouter

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messaging_2frequest_2fpayload_2ffeed_2ffeed_2drequests_2eproto__INCLUDED
