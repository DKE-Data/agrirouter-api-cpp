// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging/request/payload/account/endpoints.proto

#ifndef PROTOBUF_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto__INCLUDED
#define PROTOBUF_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace agrirouter {
namespace request {
namespace payload {
namespace account {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto();
void protobuf_InitDefaults_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto();
void protobuf_AssignDesc_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto();
void protobuf_ShutdownFile_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto();

class ListEndpointsQuery;

enum ListEndpointsQuery_Direction {
  ListEndpointsQuery_Direction_SEND = 0,
  ListEndpointsQuery_Direction_RECEIVE = 1,
  ListEndpointsQuery_Direction_SEND_RECEIVE = 2,
  ListEndpointsQuery_Direction_ListEndpointsQuery_Direction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ListEndpointsQuery_Direction_ListEndpointsQuery_Direction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ListEndpointsQuery_Direction_IsValid(int value);
const ListEndpointsQuery_Direction ListEndpointsQuery_Direction_Direction_MIN = ListEndpointsQuery_Direction_SEND;
const ListEndpointsQuery_Direction ListEndpointsQuery_Direction_Direction_MAX = ListEndpointsQuery_Direction_SEND_RECEIVE;
const int ListEndpointsQuery_Direction_Direction_ARRAYSIZE = ListEndpointsQuery_Direction_Direction_MAX + 1;

const ::google::protobuf::EnumDescriptor* ListEndpointsQuery_Direction_descriptor();
inline const ::std::string& ListEndpointsQuery_Direction_Name(ListEndpointsQuery_Direction value) {
  return ::google::protobuf::internal::NameOfEnum(
    ListEndpointsQuery_Direction_descriptor(), value);
}
inline bool ListEndpointsQuery_Direction_Parse(
    const ::std::string& name, ListEndpointsQuery_Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ListEndpointsQuery_Direction>(
    ListEndpointsQuery_Direction_descriptor(), name, value);
}
// ===================================================================

class ListEndpointsQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.request.payload.account.ListEndpointsQuery) */ {
 public:
  ListEndpointsQuery();
  virtual ~ListEndpointsQuery();

  ListEndpointsQuery(const ListEndpointsQuery& from);

  inline ListEndpointsQuery& operator=(const ListEndpointsQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListEndpointsQuery& default_instance();

  static const ListEndpointsQuery* internal_default_instance();

  void Swap(ListEndpointsQuery* other);

  // implements Message ----------------------------------------------

  inline ListEndpointsQuery* New() const { return New(NULL); }

  ListEndpointsQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListEndpointsQuery& from);
  void MergeFrom(const ListEndpointsQuery& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListEndpointsQuery* other);
  void UnsafeMergeFrom(const ListEndpointsQuery& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ListEndpointsQuery_Direction Direction;
  static const Direction SEND =
    ListEndpointsQuery_Direction_SEND;
  static const Direction RECEIVE =
    ListEndpointsQuery_Direction_RECEIVE;
  static const Direction SEND_RECEIVE =
    ListEndpointsQuery_Direction_SEND_RECEIVE;
  static inline bool Direction_IsValid(int value) {
    return ListEndpointsQuery_Direction_IsValid(value);
  }
  static const Direction Direction_MIN =
    ListEndpointsQuery_Direction_Direction_MIN;
  static const Direction Direction_MAX =
    ListEndpointsQuery_Direction_Direction_MAX;
  static const int Direction_ARRAYSIZE =
    ListEndpointsQuery_Direction_Direction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Direction_descriptor() {
    return ListEndpointsQuery_Direction_descriptor();
  }
  static inline const ::std::string& Direction_Name(Direction value) {
    return ListEndpointsQuery_Direction_Name(value);
  }
  static inline bool Direction_Parse(const ::std::string& name,
      Direction* value) {
    return ListEndpointsQuery_Direction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string technical_message_type = 1;
  void clear_technical_message_type();
  static const int kTechnicalMessageTypeFieldNumber = 1;
  const ::std::string& technical_message_type() const;
  void set_technical_message_type(const ::std::string& value);
  void set_technical_message_type(const char* value);
  void set_technical_message_type(const char* value, size_t size);
  ::std::string* mutable_technical_message_type();
  ::std::string* release_technical_message_type();
  void set_allocated_technical_message_type(::std::string* technical_message_type);

  // optional .agrirouter.request.payload.account.ListEndpointsQuery.Direction direction = 2;
  void clear_direction();
  static const int kDirectionFieldNumber = 2;
  ::agrirouter::request::payload::account::ListEndpointsQuery_Direction direction() const;
  void set_direction(::agrirouter::request::payload::account::ListEndpointsQuery_Direction value);

  // @@protoc_insertion_point(class_scope:agrirouter.request.payload.account.ListEndpointsQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr technical_message_type_;
  int direction_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto_impl();
  friend void  protobuf_AddDesc_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto_impl();
  friend void protobuf_AssignDesc_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto();
  friend void protobuf_ShutdownFile_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ListEndpointsQuery> ListEndpointsQuery_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ListEndpointsQuery

// optional string technical_message_type = 1;
inline void ListEndpointsQuery::clear_technical_message_type() {
  technical_message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListEndpointsQuery::technical_message_type() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.payload.account.ListEndpointsQuery.technical_message_type)
  return technical_message_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEndpointsQuery::set_technical_message_type(const ::std::string& value) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.request.payload.account.ListEndpointsQuery.technical_message_type)
}
inline void ListEndpointsQuery::set_technical_message_type(const char* value) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.request.payload.account.ListEndpointsQuery.technical_message_type)
}
inline void ListEndpointsQuery::set_technical_message_type(const char* value, size_t size) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.request.payload.account.ListEndpointsQuery.technical_message_type)
}
inline ::std::string* ListEndpointsQuery::mutable_technical_message_type() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.request.payload.account.ListEndpointsQuery.technical_message_type)
  return technical_message_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListEndpointsQuery::release_technical_message_type() {
  // @@protoc_insertion_point(field_release:agrirouter.request.payload.account.ListEndpointsQuery.technical_message_type)
  
  return technical_message_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListEndpointsQuery::set_allocated_technical_message_type(::std::string* technical_message_type) {
  if (technical_message_type != NULL) {
    
  } else {
    
  }
  technical_message_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), technical_message_type);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.request.payload.account.ListEndpointsQuery.technical_message_type)
}

// optional .agrirouter.request.payload.account.ListEndpointsQuery.Direction direction = 2;
inline void ListEndpointsQuery::clear_direction() {
  direction_ = 0;
}
inline ::agrirouter::request::payload::account::ListEndpointsQuery_Direction ListEndpointsQuery::direction() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.payload.account.ListEndpointsQuery.direction)
  return static_cast< ::agrirouter::request::payload::account::ListEndpointsQuery_Direction >(direction_);
}
inline void ListEndpointsQuery::set_direction(::agrirouter::request::payload::account::ListEndpointsQuery_Direction value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:agrirouter.request.payload.account.ListEndpointsQuery.direction)
}

inline const ListEndpointsQuery* ListEndpointsQuery::internal_default_instance() {
  return &ListEndpointsQuery_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace account
}  // namespace payload
}  // namespace request
}  // namespace agrirouter

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::agrirouter::request::payload::account::ListEndpointsQuery_Direction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::agrirouter::request::payload::account::ListEndpointsQuery_Direction>() {
  return ::agrirouter::request::payload::account::ListEndpointsQuery_Direction_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messaging_2frequest_2fpayload_2faccount_2fendpoints_2eproto__INCLUDED
