// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging/request/request.proto

#ifndef PROTOBUF_messaging_2frequest_2frequest_2eproto__INCLUDED
#define PROTOBUF_messaging_2frequest_2frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "commons/chunk.pb.h"
// @@protoc_insertion_point(includes)

namespace agrirouter {
namespace request {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messaging_2frequest_2frequest_2eproto();
void protobuf_InitDefaults_messaging_2frequest_2frequest_2eproto();
void protobuf_AssignDesc_messaging_2frequest_2frequest_2eproto();
void protobuf_ShutdownFile_messaging_2frequest_2frequest_2eproto();

class RequestEnvelope;
class RequestPayloadWrapper;

enum RequestEnvelope_Mode {
  RequestEnvelope_Mode_DIRECT = 0,
  RequestEnvelope_Mode_PUBLISH = 1,
  RequestEnvelope_Mode_PUBLISH_WITH_DIRECT = 2,
  RequestEnvelope_Mode_RequestEnvelope_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestEnvelope_Mode_RequestEnvelope_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestEnvelope_Mode_IsValid(int value);
const RequestEnvelope_Mode RequestEnvelope_Mode_Mode_MIN = RequestEnvelope_Mode_DIRECT;
const RequestEnvelope_Mode RequestEnvelope_Mode_Mode_MAX = RequestEnvelope_Mode_PUBLISH_WITH_DIRECT;
const int RequestEnvelope_Mode_Mode_ARRAYSIZE = RequestEnvelope_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestEnvelope_Mode_descriptor();
inline const ::std::string& RequestEnvelope_Mode_Name(RequestEnvelope_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestEnvelope_Mode_descriptor(), value);
}
inline bool RequestEnvelope_Mode_Parse(
    const ::std::string& name, RequestEnvelope_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestEnvelope_Mode>(
    RequestEnvelope_Mode_descriptor(), name, value);
}
// ===================================================================

class RequestEnvelope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.request.RequestEnvelope) */ {
 public:
  RequestEnvelope();
  virtual ~RequestEnvelope();

  RequestEnvelope(const RequestEnvelope& from);

  inline RequestEnvelope& operator=(const RequestEnvelope& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestEnvelope& default_instance();

  static const RequestEnvelope* internal_default_instance();

  void Swap(RequestEnvelope* other);

  // implements Message ----------------------------------------------

  inline RequestEnvelope* New() const { return New(NULL); }

  RequestEnvelope* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestEnvelope& from);
  void MergeFrom(const RequestEnvelope& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestEnvelope* other);
  void UnsafeMergeFrom(const RequestEnvelope& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RequestEnvelope_Mode Mode;
  static const Mode DIRECT =
    RequestEnvelope_Mode_DIRECT;
  static const Mode PUBLISH =
    RequestEnvelope_Mode_PUBLISH;
  static const Mode PUBLISH_WITH_DIRECT =
    RequestEnvelope_Mode_PUBLISH_WITH_DIRECT;
  static inline bool Mode_IsValid(int value) {
    return RequestEnvelope_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    RequestEnvelope_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    RequestEnvelope_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    RequestEnvelope_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return RequestEnvelope_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return RequestEnvelope_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return RequestEnvelope_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string application_message_id = 1;
  void clear_application_message_id();
  static const int kApplicationMessageIdFieldNumber = 1;
  const ::std::string& application_message_id() const;
  void set_application_message_id(const ::std::string& value);
  void set_application_message_id(const char* value);
  void set_application_message_id(const char* value, size_t size);
  ::std::string* mutable_application_message_id();
  ::std::string* release_application_message_id();
  void set_allocated_application_message_id(::std::string* application_message_id);

  // optional int64 application_message_seq_no = 2;
  void clear_application_message_seq_no();
  static const int kApplicationMessageSeqNoFieldNumber = 2;
  ::google::protobuf::int64 application_message_seq_no() const;
  void set_application_message_seq_no(::google::protobuf::int64 value);

  // optional string technical_message_type = 3;
  void clear_technical_message_type();
  static const int kTechnicalMessageTypeFieldNumber = 3;
  const ::std::string& technical_message_type() const;
  void set_technical_message_type(const ::std::string& value);
  void set_technical_message_type(const char* value);
  void set_technical_message_type(const char* value, size_t size);
  ::std::string* mutable_technical_message_type();
  ::std::string* release_technical_message_type();
  void set_allocated_technical_message_type(::std::string* technical_message_type);

  // optional string team_set_context_id = 4;
  void clear_team_set_context_id();
  static const int kTeamSetContextIdFieldNumber = 4;
  const ::std::string& team_set_context_id() const;
  void set_team_set_context_id(const ::std::string& value);
  void set_team_set_context_id(const char* value);
  void set_team_set_context_id(const char* value, size_t size);
  ::std::string* mutable_team_set_context_id();
  ::std::string* release_team_set_context_id();
  void set_allocated_team_set_context_id(::std::string* team_set_context_id);

  // optional .agrirouter.request.RequestEnvelope.Mode mode = 5;
  void clear_mode();
  static const int kModeFieldNumber = 5;
  ::agrirouter::request::RequestEnvelope_Mode mode() const;
  void set_mode(::agrirouter::request::RequestEnvelope_Mode value);

  // repeated string recipients = 6;
  int recipients_size() const;
  void clear_recipients();
  static const int kRecipientsFieldNumber = 6;
  const ::std::string& recipients(int index) const;
  ::std::string* mutable_recipients(int index);
  void set_recipients(int index, const ::std::string& value);
  void set_recipients(int index, const char* value);
  void set_recipients(int index, const char* value, size_t size);
  ::std::string* add_recipients();
  void add_recipients(const ::std::string& value);
  void add_recipients(const char* value);
  void add_recipients(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& recipients() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_recipients();

  // optional .agrirouter.commons.ChunkComponent chunk_info = 7;
  bool has_chunk_info() const;
  void clear_chunk_info();
  static const int kChunkInfoFieldNumber = 7;
  const ::agrirouter::commons::ChunkComponent& chunk_info() const;
  ::agrirouter::commons::ChunkComponent* mutable_chunk_info();
  ::agrirouter::commons::ChunkComponent* release_chunk_info();
  void set_allocated_chunk_info(::agrirouter::commons::ChunkComponent* chunk_info);

  // optional .google.protobuf.Timestamp timestamp = 8;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 8;
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* mutable_timestamp();
  ::google::protobuf::Timestamp* release_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // @@protoc_insertion_point(class_scope:agrirouter.request.RequestEnvelope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> recipients_;
  ::google::protobuf::internal::ArenaStringPtr application_message_id_;
  ::google::protobuf::internal::ArenaStringPtr technical_message_type_;
  ::google::protobuf::internal::ArenaStringPtr team_set_context_id_;
  ::agrirouter::commons::ChunkComponent* chunk_info_;
  ::google::protobuf::Timestamp* timestamp_;
  ::google::protobuf::int64 application_message_seq_no_;
  int mode_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messaging_2frequest_2frequest_2eproto_impl();
  friend void  protobuf_AddDesc_messaging_2frequest_2frequest_2eproto_impl();
  friend void protobuf_AssignDesc_messaging_2frequest_2frequest_2eproto();
  friend void protobuf_ShutdownFile_messaging_2frequest_2frequest_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RequestEnvelope> RequestEnvelope_default_instance_;

// -------------------------------------------------------------------

class RequestPayloadWrapper : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agrirouter.request.RequestPayloadWrapper) */ {
 public:
  RequestPayloadWrapper();
  virtual ~RequestPayloadWrapper();

  RequestPayloadWrapper(const RequestPayloadWrapper& from);

  inline RequestPayloadWrapper& operator=(const RequestPayloadWrapper& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPayloadWrapper& default_instance();

  static const RequestPayloadWrapper* internal_default_instance();

  void Swap(RequestPayloadWrapper* other);

  // implements Message ----------------------------------------------

  inline RequestPayloadWrapper* New() const { return New(NULL); }

  RequestPayloadWrapper* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestPayloadWrapper& from);
  void MergeFrom(const RequestPayloadWrapper& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestPayloadWrapper* other);
  void UnsafeMergeFrom(const RequestPayloadWrapper& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.Any details = 1;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 1;
  const ::google::protobuf::Any& details() const;
  ::google::protobuf::Any* mutable_details();
  ::google::protobuf::Any* release_details();
  void set_allocated_details(::google::protobuf::Any* details);

  // @@protoc_insertion_point(class_scope:agrirouter.request.RequestPayloadWrapper)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* details_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_messaging_2frequest_2frequest_2eproto_impl();
  friend void  protobuf_AddDesc_messaging_2frequest_2frequest_2eproto_impl();
  friend void protobuf_AssignDesc_messaging_2frequest_2frequest_2eproto();
  friend void protobuf_ShutdownFile_messaging_2frequest_2frequest_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RequestPayloadWrapper> RequestPayloadWrapper_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestEnvelope

// optional string application_message_id = 1;
inline void RequestEnvelope::clear_application_message_id() {
  application_message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestEnvelope::application_message_id() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.application_message_id)
  return application_message_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestEnvelope::set_application_message_id(const ::std::string& value) {
  
  application_message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.request.RequestEnvelope.application_message_id)
}
inline void RequestEnvelope::set_application_message_id(const char* value) {
  
  application_message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.request.RequestEnvelope.application_message_id)
}
inline void RequestEnvelope::set_application_message_id(const char* value, size_t size) {
  
  application_message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.request.RequestEnvelope.application_message_id)
}
inline ::std::string* RequestEnvelope::mutable_application_message_id() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.request.RequestEnvelope.application_message_id)
  return application_message_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestEnvelope::release_application_message_id() {
  // @@protoc_insertion_point(field_release:agrirouter.request.RequestEnvelope.application_message_id)
  
  return application_message_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestEnvelope::set_allocated_application_message_id(::std::string* application_message_id) {
  if (application_message_id != NULL) {
    
  } else {
    
  }
  application_message_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), application_message_id);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.request.RequestEnvelope.application_message_id)
}

// optional int64 application_message_seq_no = 2;
inline void RequestEnvelope::clear_application_message_seq_no() {
  application_message_seq_no_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestEnvelope::application_message_seq_no() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.application_message_seq_no)
  return application_message_seq_no_;
}
inline void RequestEnvelope::set_application_message_seq_no(::google::protobuf::int64 value) {
  
  application_message_seq_no_ = value;
  // @@protoc_insertion_point(field_set:agrirouter.request.RequestEnvelope.application_message_seq_no)
}

// optional string technical_message_type = 3;
inline void RequestEnvelope::clear_technical_message_type() {
  technical_message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestEnvelope::technical_message_type() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.technical_message_type)
  return technical_message_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestEnvelope::set_technical_message_type(const ::std::string& value) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.request.RequestEnvelope.technical_message_type)
}
inline void RequestEnvelope::set_technical_message_type(const char* value) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.request.RequestEnvelope.technical_message_type)
}
inline void RequestEnvelope::set_technical_message_type(const char* value, size_t size) {
  
  technical_message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.request.RequestEnvelope.technical_message_type)
}
inline ::std::string* RequestEnvelope::mutable_technical_message_type() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.request.RequestEnvelope.technical_message_type)
  return technical_message_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestEnvelope::release_technical_message_type() {
  // @@protoc_insertion_point(field_release:agrirouter.request.RequestEnvelope.technical_message_type)
  
  return technical_message_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestEnvelope::set_allocated_technical_message_type(::std::string* technical_message_type) {
  if (technical_message_type != NULL) {
    
  } else {
    
  }
  technical_message_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), technical_message_type);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.request.RequestEnvelope.technical_message_type)
}

// optional string team_set_context_id = 4;
inline void RequestEnvelope::clear_team_set_context_id() {
  team_set_context_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestEnvelope::team_set_context_id() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.team_set_context_id)
  return team_set_context_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestEnvelope::set_team_set_context_id(const ::std::string& value) {
  
  team_set_context_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agrirouter.request.RequestEnvelope.team_set_context_id)
}
inline void RequestEnvelope::set_team_set_context_id(const char* value) {
  
  team_set_context_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agrirouter.request.RequestEnvelope.team_set_context_id)
}
inline void RequestEnvelope::set_team_set_context_id(const char* value, size_t size) {
  
  team_set_context_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agrirouter.request.RequestEnvelope.team_set_context_id)
}
inline ::std::string* RequestEnvelope::mutable_team_set_context_id() {
  
  // @@protoc_insertion_point(field_mutable:agrirouter.request.RequestEnvelope.team_set_context_id)
  return team_set_context_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestEnvelope::release_team_set_context_id() {
  // @@protoc_insertion_point(field_release:agrirouter.request.RequestEnvelope.team_set_context_id)
  
  return team_set_context_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestEnvelope::set_allocated_team_set_context_id(::std::string* team_set_context_id) {
  if (team_set_context_id != NULL) {
    
  } else {
    
  }
  team_set_context_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_set_context_id);
  // @@protoc_insertion_point(field_set_allocated:agrirouter.request.RequestEnvelope.team_set_context_id)
}

// optional .agrirouter.request.RequestEnvelope.Mode mode = 5;
inline void RequestEnvelope::clear_mode() {
  mode_ = 0;
}
inline ::agrirouter::request::RequestEnvelope_Mode RequestEnvelope::mode() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.mode)
  return static_cast< ::agrirouter::request::RequestEnvelope_Mode >(mode_);
}
inline void RequestEnvelope::set_mode(::agrirouter::request::RequestEnvelope_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:agrirouter.request.RequestEnvelope.mode)
}

// repeated string recipients = 6;
inline int RequestEnvelope::recipients_size() const {
  return recipients_.size();
}
inline void RequestEnvelope::clear_recipients() {
  recipients_.Clear();
}
inline const ::std::string& RequestEnvelope::recipients(int index) const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.recipients)
  return recipients_.Get(index);
}
inline ::std::string* RequestEnvelope::mutable_recipients(int index) {
  // @@protoc_insertion_point(field_mutable:agrirouter.request.RequestEnvelope.recipients)
  return recipients_.Mutable(index);
}
inline void RequestEnvelope::set_recipients(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:agrirouter.request.RequestEnvelope.recipients)
  recipients_.Mutable(index)->assign(value);
}
inline void RequestEnvelope::set_recipients(int index, const char* value) {
  recipients_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:agrirouter.request.RequestEnvelope.recipients)
}
inline void RequestEnvelope::set_recipients(int index, const char* value, size_t size) {
  recipients_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:agrirouter.request.RequestEnvelope.recipients)
}
inline ::std::string* RequestEnvelope::add_recipients() {
  // @@protoc_insertion_point(field_add_mutable:agrirouter.request.RequestEnvelope.recipients)
  return recipients_.Add();
}
inline void RequestEnvelope::add_recipients(const ::std::string& value) {
  recipients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:agrirouter.request.RequestEnvelope.recipients)
}
inline void RequestEnvelope::add_recipients(const char* value) {
  recipients_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:agrirouter.request.RequestEnvelope.recipients)
}
inline void RequestEnvelope::add_recipients(const char* value, size_t size) {
  recipients_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:agrirouter.request.RequestEnvelope.recipients)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RequestEnvelope::recipients() const {
  // @@protoc_insertion_point(field_list:agrirouter.request.RequestEnvelope.recipients)
  return recipients_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RequestEnvelope::mutable_recipients() {
  // @@protoc_insertion_point(field_mutable_list:agrirouter.request.RequestEnvelope.recipients)
  return &recipients_;
}

// optional .agrirouter.commons.ChunkComponent chunk_info = 7;
inline bool RequestEnvelope::has_chunk_info() const {
  return this != internal_default_instance() && chunk_info_ != NULL;
}
inline void RequestEnvelope::clear_chunk_info() {
  if (GetArenaNoVirtual() == NULL && chunk_info_ != NULL) delete chunk_info_;
  chunk_info_ = NULL;
}
inline const ::agrirouter::commons::ChunkComponent& RequestEnvelope::chunk_info() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.chunk_info)
  return chunk_info_ != NULL ? *chunk_info_
                         : *::agrirouter::commons::ChunkComponent::internal_default_instance();
}
inline ::agrirouter::commons::ChunkComponent* RequestEnvelope::mutable_chunk_info() {
  
  if (chunk_info_ == NULL) {
    chunk_info_ = new ::agrirouter::commons::ChunkComponent;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.request.RequestEnvelope.chunk_info)
  return chunk_info_;
}
inline ::agrirouter::commons::ChunkComponent* RequestEnvelope::release_chunk_info() {
  // @@protoc_insertion_point(field_release:agrirouter.request.RequestEnvelope.chunk_info)
  
  ::agrirouter::commons::ChunkComponent* temp = chunk_info_;
  chunk_info_ = NULL;
  return temp;
}
inline void RequestEnvelope::set_allocated_chunk_info(::agrirouter::commons::ChunkComponent* chunk_info) {
  delete chunk_info_;
  chunk_info_ = chunk_info;
  if (chunk_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.request.RequestEnvelope.chunk_info)
}

// optional .google.protobuf.Timestamp timestamp = 8;
inline bool RequestEnvelope::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline void RequestEnvelope::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
inline const ::google::protobuf::Timestamp& RequestEnvelope::timestamp() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestEnvelope.timestamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* RequestEnvelope::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.request.RequestEnvelope.timestamp)
  return timestamp_;
}
inline ::google::protobuf::Timestamp* RequestEnvelope::release_timestamp() {
  // @@protoc_insertion_point(field_release:agrirouter.request.RequestEnvelope.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void RequestEnvelope::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.request.RequestEnvelope.timestamp)
}

inline const RequestEnvelope* RequestEnvelope::internal_default_instance() {
  return &RequestEnvelope_default_instance_.get();
}
// -------------------------------------------------------------------

// RequestPayloadWrapper

// optional .google.protobuf.Any details = 1;
inline bool RequestPayloadWrapper::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void RequestPayloadWrapper::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) delete details_;
  details_ = NULL;
}
inline const ::google::protobuf::Any& RequestPayloadWrapper::details() const {
  // @@protoc_insertion_point(field_get:agrirouter.request.RequestPayloadWrapper.details)
  return details_ != NULL ? *details_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* RequestPayloadWrapper::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:agrirouter.request.RequestPayloadWrapper.details)
  return details_;
}
inline ::google::protobuf::Any* RequestPayloadWrapper::release_details() {
  // @@protoc_insertion_point(field_release:agrirouter.request.RequestPayloadWrapper.details)
  
  ::google::protobuf::Any* temp = details_;
  details_ = NULL;
  return temp;
}
inline void RequestPayloadWrapper::set_allocated_details(::google::protobuf::Any* details) {
  delete details_;
  details_ = details;
  if (details) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:agrirouter.request.RequestPayloadWrapper.details)
}

inline const RequestPayloadWrapper* RequestPayloadWrapper::internal_default_instance() {
  return &RequestPayloadWrapper_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace request
}  // namespace agrirouter

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::agrirouter::request::RequestEnvelope_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::agrirouter::request::RequestEnvelope_Mode>() {
  return ::agrirouter::request::RequestEnvelope_Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messaging_2frequest_2frequest_2eproto__INCLUDED
